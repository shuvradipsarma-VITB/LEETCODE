/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int maxLen = 0;
    public int longestZigZag(TreeNode root) {
        findMax(root.left, 1, -1);
        findMax(root.right, 1, 1);
        return maxLen;
    }

    public void findMax(TreeNode root, int zzLevel, int side) {
        if (root == null) {
            return;
        }
        if (zzLevel > maxLen) {
            maxLen = zzLevel;
        }
        if (side == -1) {
            findMax(root.left, 1, -1);
            findMax(root.right, zzLevel+1, 1);
        } else {
            findMax(root.left, zzLevel+1, -1);
            findMax(root.right, 1, 1);
        }
    }
}
