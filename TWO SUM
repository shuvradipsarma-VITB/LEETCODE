Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

 

Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]



import java.util.*;
class Solution {
    public int[] twoSum(int[] nums, int target) { 
         // BRUTE FORCE SOLUTION 

        // for(int i=0;i<nums.length-1;i++)
        // {
        //     for(int j=i;j<nums.length;j++)
        //     {
        //         if(nums[i]+nums[j]==target)
        //         {
        //             return [i,j];
        //         }
        //     }
        // }
        // return [];

        
        // Two Pointer Approach(Sorting the array first in increasing order to apply the algo of two-pointer)
        
        int arr[]=new int[nums.length];
          
          // copying the values of nums to arr so that for returing the
          // indices,the original index position remain intact.
         
         for(int i=0;i<nums.length;i++)
         {
             arr[i]=nums[i];
         }
       

        Arrays.sort(nums); //increasing order
        int i=0,j=nums.length-1;
        while(i<j)
        {
           if((nums[i]+nums[j])==target)
            {
                break;
            }
            else if((nums[i]+nums[j])<target)
            {
                i++;
            }
            else if((nums[i]+nums[j])>target)
            {
                j--;
            }
        }
    //storing the correct indices of the solution in 'index' arraylist
        int index[]=new int[2];
        int c=0;
        for(int k=0;k<nums.length;k++)
        {
            if(nums[i]==arr[k])
            {
                index[c]=k;
                c++;
            }
            else if(nums[j]==arr[k])
            {
                index[c]=k;
                c++;
            }
        }
        return index;
    }
}
